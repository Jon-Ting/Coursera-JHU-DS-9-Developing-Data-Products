ggplot(data=pop, aes(x=x)) +
geom_histogram(aes(y=..count.., fill=sum)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
data("ToothGrowth")
data(ToothGrowth)
?labs
library(ggplot2)
n <- 40
lambd <- 0.2
num_sim <- 1000
sapply?
?sapply
data.frame(x=sapply(1:1000, function(x) {mean(rexp(n, lambd))}))
rexp(n, lambd
)
sim_exp <- replicate(1000, rexp(n, lambd))
mean_sim_exp <- apply(sim_exp, 2, mean)
mean_sim_exp
data.frame(x=sapply(1:1000, function(x) {mean(rexp(n, lambd))}))
?replicate
?rep
?replicate
?rep
rep(1000, rexp(n, lambda))
?rep
?replicate
?apply
simulations <- replicate(n=1000, expr=rexp(n, lambd))
sim_means <- apply(X=simulations, MARGIN=2, FUN=mean)
simulations
sim_means
pop
class(pop)
class(sim_means)
data.frame(sim_means)
pop <- apply(X=simulations, MARGIN=2, FUN=mean)
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
simulations <- replicate(n=1000, expr=rexp(n, lambd))
pop <- data.frame(apply(X=simulations, MARGIN=2, FUN=mean))
# Plot the histogram
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..density.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..density.., fill=..density..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..density..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
data.frame(x=sapply(sims, function(x) {mean(rexp(n, lambda))}))
data.frame(x=sapply(1:1000, function(x) {mean(rexp(n, lambda))}))
pop <- data.frame(x=sapply(1:1000, function(x) {mean(rexp(n, lambda))}))
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
pop <- data.frame(apply(X=simulations, MARGIN=2, FUN=mean))
ggplot(aes(x=x), data=pop) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
pop <- data.frame(apply(X=simulations, MARGIN=2, FUN=mean))
pop <- data.frame(x=sapply(1:1000, function(x) {mean(rexp(n, lambda))}))
pop
hist(pop)
hist(apply(X=simulations, MARGIN=2, FUN=mean))
simulations <- replicate(n=1000, expr=rexp(n, lambd))
pop <- data.frame(apply(X=simulations, MARGIN=2, FUN=mean))
samp_mean <- mean(pop$x)
theo_mean <- 1 / lambd
cbind(samp_mean, theo_mean)
pop
names(pop)
pop <- data.frame(apply(simulations, 2, FUN=mean))
pop
names(pop <- data.frame(apply(simulations, 2, FUN=mean)))
names(pop)
pop <- data.frame(apply(simulations, 2, FUN=mean))
names(pop)
pop <- data.frame(apply(simulations, 2, mean))
names(pop)
pop <- apply(simulations, 2, mean)
names(pop)
pop
data.frame(pop)
names(data.frame(pop))
a <- data.frame(pop)
names(a)
?apply
pop
simulations
pop <- replicate(n=1000, expr=mean(rexp(n, lambd)))
pop
pop <- data.frame(pop)
ggplot(data=pop, aes(x=x)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
pop
names(pop)
ggplot(data=pop) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
ggplot(data=pop, aes(x=pop)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
?apply
simulations <- replicate(n=1000, expr=mean(rexp(n, lambd))
pop <- data.frame(apply(X=simulations, MARGIN=2, FUN=mean))
simulations <- replicate(n=1000, expr=mean(rexp(n, lambd)))
pop <- data.frame(apply(X=simulations, MARGIN=2, FUN=mean))
simulations
pop <- data.frame(apply(simulations, MARGIN=2, FUN=mean))
pop <- data.frame(apply(simulations, 2, FUN=mean))
apply(simulations, 2, FUN=mean)
apply(simulations, 2, mean)
simulations <- replicate(n=1000, expr=rexp(n, lambd))
pop <- data.frame(apply(simulations, 2, FUN=mean))
names(pop)
ggplot(data=pop, aes(x=mean)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
ggplot(data=pop, aes(x=pop)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
pop <- data.frame(apply(simulations, 2, mean))
ggplot(data=pop, aes(x=pop)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
names(pop)
pop <- apply(simulations, 2, mean)
names(pop)
pop
pop <- data.frame(pop)
names(pop)
simulations <- replicate(n=1000, expr=rexp(n, lambd))
pop <- apply(simulations, 2, FUN=mean)
pop <- data.frame(pop)
names(pop)
simulations <- replicate(n=1000, expr=rexp(n, lambd))
pop <- apply(X=simulations, MARGIN=2, FUN=mean)
pop <- data.frame(pop)
names(pop)
ggplot(data=pop, aes(x=x)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
ggplot(data=pop, aes(x=pop)) +
geom_histogram(aes(y=..count.., fill=..count..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", x="mean")
samp_mean <- mean(sim_means$x)
theo_mean <- 1 / lambd
simulations <- replicate(n=1000, expr=rexp(n, lambd))
sim_means <- apply(X=simulations, MARGIN=2, FUN=mean)
samp_mean <- mean(sim_means$x)
theo_mean <- 1 / lambd
name(sim_means)
names(sim_means)
sim_means
mean(sim_means)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
t.test(sim_means)
t.test(sim_means)[1[]
t.test(sim_means)[1]
t.test(sim_means)[2]
t.test(sim_means)[3]
t.test(sim_means)[4]
rm(list=ls())
n <- 40
lambd <- 0.2
# Simulate 40 exponentials over 1000 simulations
simulations <- replicate(n=1000, expr=rexp(n, lambd))
# Extract the means of each simulation (down each column)
sim_means <- apply(X=simulations, MARGIN=2, FUN=mean)
samp_mean <- mean(sim_means)
theo_mean <- 1 / lambd
samp_var <- var(sim_means)
theo_var <- (1/lambd)^2 / n
sim_means <- data.frame(sim_means)
# Compare the sample and theoretical statistics
ggplot(data=sim_means, aes(x=sim_means)) +
geom_histogram(aes(y=..density.., fill=..density..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean") +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dashed") +
stat_function(fun=dnorm, args=list(mean=1/lambd, sd=sqrt(theo_var)), color = "red") +
geom_vline(xintercept=theo_mean, linetype="dashed")
ggplot(data=sim_means, aes(x=sim_means)) +
geom_histogram(aes(y=..density.., fill=..density..))
ggplot(data=sim_means, aes(x=sim_means)) +
geom_histogram(aes(y=..count.., fill=..count..))
ggplot(data=sim_means, aes(x=sim_means)) +
geom_histogram(aes(y=..density.., fill=..density..))
ggplot(data=sim_means, aes(x=sim_means)) +
geom_histogram(aes(y=..density.., fill=..density..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
ggplot(data=sim_means, aes(x=sim_means)) +
geom_histogram(aes(y=..density.., fill=..density..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean") +
geom_density()
?geom_density
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..))
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean") +
geom_density()
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue") +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red")
?geom_vline
?linetype
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dotted", col="blue") +
geom_vline(xintercept=theo_mean, linetype="dotted", col="red")
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dotdash", col="blue") +
geom_vline(xintercept=theo_mean, linetype="dotted", col="red")
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=2) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=2)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=1.5) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=1.5)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density() +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.5) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.5)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density()
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(2)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(size=2)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(size=1.5)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(size=1)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(size=0.5)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(size=0.8)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_density(size=0.8) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.5) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.5) +
stat_function(fun=dnorm, args=list(mean=1/lambd, sd=sqrt(theo_var)), color = "red")
?stat_function
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.5) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.5) +
geom_density(size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), col="red", size=0.8)
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.5) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.5) +
geom_density(size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), size=0.8, col="red") +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.8) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.5) +
geom_density(size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), size=0.8, col="red") +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.8) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.8) +
geom_density(size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), size=0.8, col="red") +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.3) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.3) +
geom_density(size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), size=0.8, col="red") +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.1) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.1) +
geom_density(size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), size=0.8, col="red") +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
theo_mean
samp_mean
ggplot(data=sim_means, mapping=aes(x=sim_means)) +
geom_histogram(mapping=aes(y=..density.., fill=..density..)) +
geom_vline(xintercept=samp_mean, linetype="dashed", col="blue", size=0.5) +
geom_vline(xintercept=theo_mean, linetype="dashed", col="red", size=0.5) +
stat_function(fun=dnorm, args=list(mean=samp_mean, sd=sqrt(samp_var)), size=0.8, col="blue") +
stat_function(fun=dnorm, args=list(mean=theo_mean, sd=sqrt(theo_var)), size=0.8, col="red") +
labs(title="Averages of 40 Exponentials over 1000 Simulations", y="Density", x="Mean")
qqnorm(pop)
qqnorm(sim_means)
qqline(sim_means, col=2)
a <- apply(X=simulations, MARGIN=2, FUN=mean)
qqnorm(a)
tinytex::install_tinytex()
tinytex:::is_tinytex()
t.test(sim_means)[4]
t.test(sim_means)$conf.int
t.test(sim_means)$conf.int[1]
t.test(sim_means)$conf.int[2]
c(samp_mean, theo_mean)
data(ToothGrowth)
# Understand structure of data
str(ToothGrowth)
# Summarize the data
summary(ToothGrowth)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
ggplot(data=ToothGrowth, aes(x=dose, y=len)) +
geom_boxplot(aes(fill=dose)) +
labs(title="Tooth Length vs. Dose Amount \nby Delivery Method", x="Dose Amount", y="Tooth Length") +
facet_grid(~supp) +
theme(plot.title=element_text(lineheight=0.8, face="bold"))
library(ggplot2)
ggplot(data=ToothGrowth, aes(x=dose, y=len)) +
geom_boxplot(aes(fill=dose)) +
labs(title="Tooth Length vs. Dose Amount \nby Delivery Method", x="Dose Amount", y="Tooth Length") +
facet_grid(~supp) +
theme(plot.title=element_text(lineheight=0.8, face="bold"))
?labs
ggplot(data=ToothGrowth, mapping=aes(x=supp, y=len)) +
geom_boxplot(mapping=aes(fill=supp)) +
labs(title="Tooth Length vs Supplement Type", x="Supplement Type", y="Tooth Length")
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage", x="Dosage", y="Tooth Length")
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage by Delivery Method", x="Dosage", y="Tooth Length")
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage by Delivery Method", x="Dosage", y="Tooth Length") +
facet_grid(~supp)
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage by Delivery Method", x="Dosage", y="Tooth Length") +
facet_grid(~supp) +
theme(plot.title=element_text(lineheight=0.8, face="bold"))
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage by Delivery Method", x="Dosage", y="Tooth Length") +
facet_grid(~supp)
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage by Delivery Method", x="Dosage", y="Tooth Length") +
facet_grid(~supp) +
theme(plot.title=element_text(lineheight=0.8, face="bold"))
?t.test
ggplot(data=ToothGrowth, mapping=aes(x=dose, y=len)) +
geom_boxplot(mapping=aes(fill=dose)) +
labs(title="Tooth Length vs Dosage by Delivery Method", x="Dosage", y="Tooth Length") +
facet_grid(~supp)
t.test(formula=len~supp, data=ToothGrowth)
ToothGrowth_sub <- subset(ToothGrowth, ToothGrowth$dose %in% c(1.0, 0.5))
t.test(len~dose, data=ToothGrowth_sub)
t.test(len~dose, data=subset(ToothGrowth, ToothGrowth$dose %in% c(1.0, 0.5))
)
?t.test
t.test(formula=len~dose, data=subset(ToothGrowth, ToothGrowth$dose %in% c(0.5, 1.0)))
t.test(formula=len~dose, data=subset(ToothGrowth, ToothGrowth$dose %in% c(0.5, 2.0)))
t.test(formula=len~dose, data=subset(ToothGrowth, ToothGrowth$dose %in% c(1.0, 2.0)))
t.test(formula=len~dose, data=subset(ToothGrowth, ToothGrowth$dose %in% c(0.5, 2.0)))
t.test(formula=len~dose, data=subset(ToothGrowth, ToothGrowth$dose %in% c(0.5, 2.0)))
data?
?data
data()
data("WWWusage")
WWWusage
data("EuStockMarkets")
EuStockMarkets
data(BOD)
BOD
data(Titanic)
Titanic
data("VADeaths")
VADeaths
data(attitude)
attitude
data("USArrests")
USArrests
data("WorldPhones")
WWorldPhones
WorldPhones
?plot_ly
librar(plotly)
library(plotly)
?plot_ly
View(USArrests)
USArrests
data(pressure)
pressure
data(nottem)
nottem
data(nhtemp)
nhtemp
data(trees)
tress
trees
data("iris")
iris
data("iris3")
iris3
data(islands)
islands
data("mdeaths (UKLungDeaths)")
data("mdeaths")
data("mdeaths ")
data(longley)
longley
data(uspop)
uspop
data("warpbreaks")
warpbreaks
data(women)
women
data(morley)
morley
data(freeny)
freeny
data("euro")
euro
data("airmiles")
airmiles
data("UScitiesD")
UScitiesD
data("USAccDeaths")
USAccDeaths
data("UCBAdmissions")
UCBAdmissions
data("Seatbelts")
Seatbelts
?Seatbelts
?gather
?Seatbelts
UKDriverDeaths
?UKDriverDeaths
?Seatbelts
?gather
setwd("PhD/Learning/Data_Science/Programming/R/9_Developing_Data_Products/PA2")
install.packages(shin)
install.packages(shiny)
install.packages("shiny")
data("Seatbelts")
Seatbelts
?Seatbelts
?UKDriverDeaths
?plot_ly
library(plotly)
?plot_ly
install.packages("shiny")
library(htmltools)
install.packages(c("htmltools", "shiny"))
shiny::runApp('~/PhD/Learning/Data_Science/Programming/R/9_Developing_Data_Products/PA3/myApp')
setwd("~/PhD/Learning/Data_Science/Programming/R/9_Developing_Data_Products/PA3/myApp")
runApp()
?builder
data("Seatbelts")
accidents <- data.frame(Seatbelts) %>% gather(DriversKilled, kms)
accidents <- data.frame(Seatbelts)
gather(Seatbelts, DriversKilled, kms)
gather(Seatbelts$DriversKilled, Seatbelts$kms)
plot_ly(Seatbelts, x=~kms, y=~DriversKilled, mode="lines)"
plot_ly(Seatbelts, x=~kms, y=~DriversKilled, mode="lines")
library(plotly)
plot_ly(Seatbelts, x=~kms, y=~DriversKilled, mode="lines)"
plot_ly(Seatbelts, x=~kms, y=~DriversKilled, mode="lines")
plot_ly(data.frame(Seatbelts), x=~kms, y=~DriversKilled, mode="lines")
Seatbelts
plot_ly(data.frame(Seatbelts), x=~kms, y=~DriversKilled, mode="markers")
?plot_ly
plot_ly(data.frame(Seatbelts), x=~kms, y=~DriversKilled, mode="markers", color=~law)
class(accidents$law)
factor(accidents$law)
plot_ly(accidents, x=~kms, y=~DriversKilled, color=~law, mode="lines")
plot_ly(accidents, x=~kms, y=~DriversKilled, color=~law, mode="markers")
accidents <- data.frame(Seatbelts)
accidents$law <- factor(accidents$law)
plot_ly(accidents, x=~kms, y=~DriversKilled, color=~law, mode="markers")
plot_ly(accidents, x=~kms, y=~DriversKilled, color=~law, size=~PetrolPrice, mode="markers")
plot_ly(accidents, x=~kms, y=~front, z=~rear, type="scatter3d", color=~law, size=~PetrolPrice, mode="markers")
?Seatbelts
?plot_ly
?layout
getwd()
